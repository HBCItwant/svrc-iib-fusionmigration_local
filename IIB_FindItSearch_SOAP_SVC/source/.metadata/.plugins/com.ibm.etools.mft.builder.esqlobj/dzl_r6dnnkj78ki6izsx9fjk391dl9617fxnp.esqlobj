CREATE COMPUTE MODULE IIB_FindItSearchInputFailureHandler_Compute
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		DECLARE pException 			REFERENCE TO InputExceptionList;
		DECLARE messageNumber INTEGER ;
		DECLARE messageText CHARACTER;
		DECLARE UserGenErrorMsg		CONSTANT CHARACTER 	'User generated exception';
		
		SET  messageNumber = Environment.variables.ERROR_msg_ID;
		CALL HBC_Common.GetErrorContext(InputExceptionList,Environment.Exception);
		
		SET pException.ErrorType    = Environment.Exception.ErrorTpe;
		SET pException.Text   		= Environment.Exception.ErrorDes;
		SET pException.Number 		= Environment.Exception.ErrorCde;
		
		-- constructing the exception output message		
		DECLARE rOutput REFERENCE TO OutputRoot.XMLNSC.ns:CMSStockFault;
		CREATE FIELD OutputRoot.XMLNSC.ns:CMSStockFault AS rOutput;
		
		IF pException.ErrorType = 'UserException' THEN
			DECLARE errorCodeID INTEGER;
			DECLARE errorText CHARACTER;
			DECLARE errorDetails CHARACTER;
		    
		    SET errorCodeID  	 = Environment.variables.ERROR_msg_ID;
		    SET errorText 	 	 = Environment.variables.ERROR_msg_MSG;
		    SET errorDetails 	 = Environment.variables.ERROR_msg_MSG;
		    
		    SET rOutput.ns1:code = errorCodeID;
		    SET rOutput.ns1:message = errorText;
		    SET rOutput.ns1:severity = 'low';
		    
		-- system/sockettimeout error    
		ELSE   
			DECLARE errorCodeID INTEGER;
			DECLARE errorText CHARACTER;
			DECLARE errorDetails CHARACTER;
		    
		    SET errorCodeID  	 =  pException.Number;
		    SET errorText 	 	 =  pException.Text;
		    SET errorDetails 	 =  pException.Text;
		    
		    SET rOutput.ns1:code = errorCodeID;
		    SET rOutput.ns1:message = errorText;
		    SET rOutput.ns1:severity = 'high';
		    
		END IF;	
		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot = InputRoot;
	END;
END MODULE;